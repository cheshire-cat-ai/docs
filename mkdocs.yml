site_name: The Cheshire Cat
repo_url: https://github.com/cheshire-cat-ai/core

docs_dir: mkdocs
site_dir: docs

plugins:
  - mkdocs-video:
      is_video: True
      video_muted: True
      video_autoplay: False
      video_type: mp4
  - search
  - gen-files:
      scripts:
        - gen_pages.py
  - literate-nav:
      nav_file: SUMMARY.md
  - section-index
  - mkdocstrings:
      handlers:
        python:
          paths: [mkdocs/technical/API_Documentation]
          options:
            docstring_style: numpy

hooks:
  - mkdocs/hooks/drawio_file.py

nav:
  - Hello, dear: index.md

  - Quickstart:
      - Introduction: quickstart/introduction.md
      - Installation and First Configuration: quickstart/installation-configuration.md
      - Playing with the Cat: quickstart/play-with-the-cat.md
      # - Interacting using APIs: quickstart/interact-using-api.md
      - Uploading a Document: quickstart/upload-document.md
      - Installing a Plugin: plugins-registry/installing-plugin.md
      - Creating a Plugin: quickstart/prepare-plugin.md
      - Writing the first Tool: quickstart/writing-tool.md
      - Writing the first Hook: quickstart/writing-hook.md
      - Stopping the Cat: quickstart/stopping-the-cat.md

  - Plugins:
    - Plugin: technical/plugins/plugins.md
    - Tools: technical/plugins/tools.md
    - Hooks: technical/plugins/hooks.md
    - Forms: technical/plugins/forms.md
    - Logging: technical/plugins/logging.md
    - Settings: technical/plugins/settings.md
    - Dependencies: technical/plugins/dependencies.md
    - Python Reference: technical/API_Documentation/
    - Registry:
      - Using the Plugin Template: plugins-registry/plugin-from-template.md
      - Publishing a Plugin: plugins-registry/publishing-plugin.md
    - Debugging:
        - Visual Studio Code: technical/debugging/vscode.md

  - Framework:
      - LLM Concepts:
          - Language Models: llm-concepts/llm.md
          - Retrieval Augmented Generation: llm-concepts/rag.md
          - Prompt: llm-concepts/prompt.md
          - Encoder: llm-concepts/embedder.md
          - Vector Memory: llm-concepts/vector-memory.md
      - Cat Components:
        - The Core: conceptual/cheshire_cat/core.md
        - The Agent:
            - Introduction: conceptual/cheshire_cat/agent.md
            - Tool Chain: conceptual/cheshire_cat/tool_chain.md
            - Memory Chain: conceptual/cheshire_cat/memory_chain.md
        - The Prompts:
            - Main Prompt: conceptual/prompts/main_prompt.md
            - Instruction Prompt: conceptual/prompts/instructions.md
        - The Vector Memory:
            - Vector Memory Collections: conceptual/memory/vector_memory.md
        - The Long Term Memory:
            - Introduction: conceptual/memory/long_term_memory.md
            - Episodic Memory: conceptual/memory/episodic_memory.md
            - Declarative Memory: conceptual/memory/declarative_memory.md
            - Procedural Memory: conceptual/memory/procedural_memory.md
        - The Working Memory: conceptual/memory/working_memory.md
        - The Rabbit Hole: conceptual/cheshire_cat/rabbit_hole.md
        - The Mad Hatter: conceptual/cheshire_cat/mad_hatter.md
      - Technical Diagrams:
        - The Cat Bootstrap: technical/flows/cat-bootstrap.md
        - Chatting with the Cat: technical/flows/chatting-with-the-cat.md
        - Plugins Lifecycle: technical/flows/plugins-lifecycle.md

  - Production:
    - Client Libraries:
        - Python: technical/clientlib/clientlib-python.md
        - TypeScript: technical/clientlib/clientlib-typescript.md
        - PHP: technical/clientlib/clientlib-php.md
        - Ruby: technical/clientlib/clientlib-ruby.md
        - C#: technical/clientlib/clientlib-csharp.md
    - Administrations:
        - Architecture: administrators/architecture.md
        - Environment Variables: administrators/env-variables.md
        - User Management: technical/advanced/user_system.md
        - Automatic Tests: technical/advanced/tests.md
    - Use Cases:
        - Cat as Main product: use-cases/main-product.md
        - Cat as Sidecar of your product: use-cases/side-car.md
        - Cat as Discord BOT: use-cases/discord-bot.md
    - Guides:
#      - How to update the Cat Core: guides/update-the-core.md
      - How to backup the Long Term Memory: technical/advanced/memory_backup.md

  - FAQ: faq.md
  # - Altro:
  #   - Resources:
  #     - Videos:
  #       - Installation: resources/video-installation.md
  #     - Tutorials: resources/tutorials.md
  #     - Events: resources/events.md
  #   - Made with the Cat: made-with-the-cat.md

theme:
  name: material
  favicon: assets/img/favicon.ico
  logo: assets/img/cheshire-cat-logo.svg
  palette:
    # Palette toggle for light mode
    - scheme: custom
      toggle:
        icon: material/brightness-7
        name: Switch to dark mode

    # Palette toggle for dark mode
    - scheme: slate
      primary: black
      toggle:
        icon: material/brightness-4
        name: Switch to light mode
  font:
    #text: Old Standard TT
    text: Source Serif Pro
  features:
    - navigation.indexes
    - navigation.footer
    - navigation.top
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.sections
    - content.code.copy
    - content.code.annotate
    - search.suggest
    - search.highlight

extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/cheshire-cat-ai/core
      name: The Cheshire Cat repository on GitHub
    - icon: fontawesome/brands/discord
      link: https://discord.gg/bHX5sNFCYU
      name: The Cheshire Cat Discord Server

extra_css:
  - stylesheets/extra.css

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - admonition
  - pymdownx.details
  - attr_list
  - md_in_html
  - footnotes
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
  - def_list
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.superfences
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
